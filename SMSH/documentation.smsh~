:title SMSH-Documentation 
:theme dark
:toTopText Back to top

# What is SMSH? 

.ul
	.li TestA
	.li TestB

SMSH stands for <b Simple Markup for Styled HTML>. 
It is essentially a fast and easy markup language used to write a pretty and structured HTML document.

.h2 What it's for

SMSH is mostly for writing documents and notes, however it is not made for writing fully interactive webpages. 
SMSH handles the sections, the HTML tags and more, making them all much easier to write and to read. 
Since SMSH simply compiles to HTML (with some predefined CSS included), anyone can just open up the compiled HTML \
in their web browser, without the need for any install, setup, unzip, etc. 

# Compiler

The SMSH compiler is written in C#, and you can download it on <a{https://github.com/Ascyt/smsh} GitHub>. 
Here you can also find the source code, together with the code used to generate this documentation, which, by the way, is also written in SMSH.

.h2 Compiler usage

Argument 1 is for the input file, and there is an optional argument <code -o> for the output file, which defaults to <code <i filename>.html>. 

For a simple way to run it on Windows you can put the <i Windows-executable> into your folder, go into that folder, press <i Windows + L>, type in <code smsh.exe ../<i your-file-here.smsh>> and hit <i Enter>. 
Now you have a minimized HTML you can double-click to open in your web-browser!

# Element syntax

SMSH goes from top to bottom. Empty lines and lines containing nothing but whitespaces are completely ignored. You can define a whole element by doing <code .<i tag>>, and then writing the text body after it like this:

.card
	.pre 
		. .h4 I am a simple header :)
		
	.h4 I am a simple header :)
	
Alternatively, you can put everything in a line lower with one tab as indentation (must be tab and not spaces), like this:

.card
	.pre
		. .h4
		. 	I am also a simple header. 
		. 	However, you can give me multiple lines!
		
	.h4
		I am also a simple header. 
		However, you can give me multiple lines!
	
This will not make linebreaks, unless you're using <code .pre>. Use <code \ > to be able to put a tab in front of your line to escape the indentation.

The most common element you'll use is the normal text element, and it doesn't have a tag:
.card
	.pre . I am a normal text.
	
	. I am a normal text.
	
Unless it's a child of an element, you can even leave the <code .> away:

.card
	.pre I am a normal text.
	
	. I am a normal text.
	> Have to do it here since it's a child of .card :)
	
Or you could choose to have your element be only text, in which case you don't need <code .>.

You can also nest elements:
.card 
	.pre
		. .ul
		. 	.li
		. 		.h4 Headers...
		. 	.li
		. 		.h4 ...in lists!
		
	.ul
		.li
			.h4 Headers...
		.li
			.h4 ...in lists!

.h2 Extra elements

There are some elements that you can only define at the start of your page. Instead of using a <code .> character, these elements use the <code :> symbol.

If you make a line that starts with a <code ,> symbol, it acts as a <code margin-bottom> (you can put the size after it, defaults to <code 16px>). 
Lines that start with <code \>> get completely ignored and act as comments.
> I am a comment :)


# Element attributes

When you have a an element, you can add attributes next to the tag: 
.card 
	.pre .b[color:blue] I'm Blue da ba dee da ba daa
	.b[color:blue] I'm Blue da ba dee da ba daa
	
Attributes are applied left to right and must be after the tag. The order does not matter. Also, <b attributes may not contain spaces> <i(dark) (totally not because I'm too lazy to add support for that)>

.h3 These are the types of attributes:

.card
	.ul
		.li <b(light) class> (normal braces <code (> <code )>): The class of the element. Currently there's really only <code light> and <code dark>, I might add more at some point. 
		.li <b(light) style> (square brackets <code [> <code ]>): Custom CSS styling of the element.
		.li <b(light) link> (curly braces <code {> <code }>): The link of the element. Used mainly for links <code .a> and images <code .img> (image source, rest of the text is alt text). When clicked, the links will open in a new tab. 
		

So you can embed the funny Garfield comic that I keep forgetting about like this:
.card 
	.pre .img{https://i.kym-cdn.com/photos/images/original/002/346/435/f06.jpg} Garfield comic
	.img[width:400px;height:auto;]{https://i.kym-cdn.com/photos/images/original/002/346/435/f06.jpg} Garfield comic
	> Alright alright, I might've made the image a little smaller than it would be normally ;)

# Element inline

You can also put elements inside of lines, by wrapping them in corner braces (<code \<> <code \>>). The first argument is the element, the rest is the text.
Note that you don't have to include a <code .> before the element for inline. 

Here's an example:
.card 
	.pre . I'm normal. \<b I'm bold.\> \<i I'm italic.\> \<[color:yellow] I'm piss.\> \<(light) I'm light.\> \<code I'm code.\>
	. I'm normal. <b I'm bold.> <i I'm italic.> <[color:yellow] I'm piss.> <(light) I'm light.> <code I'm code.>

.(dark) Hint: Put a <code \ > before <code \<> or <code \>> to escape them and write them as normal characters.

# Sections
You can define a section by having a line starting with a <code #> symbol. 

This will automatically add the title for that section and add the section to the sidebar on the left, so you're able to click on it to jump to it.

If you do not want a default title, put two hashes <code ##> at the start instead of one <code #>.

Here's what this section ("Sections") looks like:
.pre # Sections

Elements must be under sections, and special elements (starting with <code :>) must not be. 

# Element list
SMSH supports pretty much every HTML tag out there, to some degree at least. However, these are the most common ones:

.card	
	.h1 Header 1 <code .h1> (Default for sections)
	.h2 Header 2 <code .h2>
	.h3 Header 3 <code .h3>
	.h4 Header 4 <code .h4>
	. Normal text <code .>/<code >
	.(light) Light text <code .(light)>
	.(dark) Dark text <code .(dark)>
	.a{https://ascyt.com/} Link <code a{"https://..."}>
	.code code .code
		
	.pre
		Multi-line code block <code .pre>
	
	.card 
		.ul
			.li 
				. unordered list
			.li 
				. unordered list
				.ul 
					.li nested
		.pre 
			\.ul
			\	.li 
			\		. unordered list
			\	.li 
			\		. unordered list
			\		.ul 
			\			.li nested
		
	
	.card
		.ol
			.li ordered list
			.li ordered list
		.pre 
			\.ol
			\	.li ordered list
			\	.li ordered list
					
				
	.card
		.table 
			.tr
				.th table
				.th row
				.th header
			.tr 
				.td table
				.td row
				.td data
			.tr 
				.td table
				.td row
				.td data
			.tr 
				.td table
				.td row
				.td data
			.tr 
				.td table
				.td row
				.td data
		.pre 
			\.table 
			\	.tr
			\		.th table
			\		.th row
			\		.th header
			\	.tr 
			\		.td table
			\		.td row
			\		.td data
			\\> ...
			
			
	.card
		. Card <code .card>

And here are the only two current special components that have to be put at the start of the page and start with <code :>:
.card 
	.ul
		.li 
			. <b(light) title>: Set the title of the document. 
			.h4 Here: 
			.pre :title SMSH-Documentation
		.li 
			. <b(light) header>: Set the top part of the document. 
			.h4 Here:
			.pre
				\:header
				\	.h1 SMSH Documentation

# Notes

I wrote this entire thing in around 3 days, so it may contain some bugs or be incomplete. 
I'm probably not going to touch this much anymore, so if there's something that's bothering you, feel free to fork this project's repository. 
The code really ain't the prettiest, it's almost 500 lines long and includes the HTML, but I guess it's as much as you can expect from a teenager student.
,
I made this mostly for writing notes in school, but hey, why not publish it. I'm a 16 year old programmer from Austria and you can learn more about me on my <a{https://ascyt.com/} website>. 
Thanks for checking this smaller project out!
